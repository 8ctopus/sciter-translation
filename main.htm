<html
    window-resizable="true"
    window-width="1000dip"
    window-height="600dip"
>
<head>
<title>sciter translation demo</title>
<style>

@import url(node_modules/sciter-logger/src/logger.css);

body > iframe {
    margin: 0;

    vertical-align: middle;
    text-align: center;
}

header {
    width: *;
    height: max-content;

    padding: 8dip;

    flow: horizontal;

    background: rgb(230,230,230);
}

header > button {
    margin: 0 *;
}

iframe {
    size: *;
}

</style>
<script type="module">

// import functions from sciter libraries
import * as sys from "@sys";

import Logger from "node_modules/sciter-logger/src/logger.js";
import Utils from "node_modules/sciter-utils/src/utils.js";

// initialize logger
Logger.init();

// attach logger to console
Logger.attach();

// capture unhandled exceptions
Logger.capture();

document.on("ready", function(event, element) {
    // ignore iframe ready event
    if (element.parentElement)
        return;

    // redirect logger output to plaintext
    Logger.plaintext(document.$("plaintext#logger"));

    // log sciter version
    console.debug(Utils.sciterInfo());

    // add support for F5 reload
    Utils.addReloadWindow();

    // close window on escape key press
    Utils.closeWindowOnEscape(Window.this);

    // center window on screen
    Utils.centerWindow(Window.this, "screen");

    // bring window to front and set input focus
    Window.this.activate(true);

    // list current directory
    const list = sys.fs.$readdir(".");

    const files = [];

    // iterate directory contents
    for (let file of list) {
        // ignore directories
        if (file.type !== 1)
            continue;

        // keep only grid*.html files
        if (file.name.startsWith("translate") && file.name.endsWith(".html")) {
            file = file.name.replace("translate-", "");
            file = file.replace(".html", "");
            files.push(file);
        }
    }

    // get element to append buttons
    const parent = document.$("header");

    // loop through files
    for (const file of files) {
        // create button
        const button = "<button>" + file + "</button>";

        // add button to ui
        parent.append(button);
    }
});

// set all buttons onclick event
document.on("click", "header > button", function(event, button) {
    // get file name from button
    const file = "translate-" + button.innerHTML + ".html";

    // get element to insert code in
    const include = document.$("iframe");

    // insert code
    include.setAttribute("src", file);
});

</script>
</head>
<header>
    <!-- buttons -->
</header>
<body>
    <iframe src="" />
    <plaintext #logger readonly />
</body>
</html>
